// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MoviesApi.Context;

namespace MoviesApi.Migrations
{
    [DbContext(typeof(MoviesContext))]
    [Migration("20210119011248_MigrationInitial")]
    partial class MigrationInitial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.2");

            modelBuilder.Entity("MoviesApi.Models.Gender", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("Active")
                        .HasColumnType("int");

                    b.Property<DateTime>("DTCreate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("MovieId")
                        .HasColumnType("int");

                    b.Property<string>("NameGender")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("MovieId");

                    b.ToTable("Genders");
                });

            modelBuilder.Entity("MoviesApi.Models.Location", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("CpfClient")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DTLocation")
                        .HasColumnType("datetime2");

                    b.Property<int>("NameMovie")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Locations");
                });

            modelBuilder.Entity("MoviesApi.Models.Movie", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("Active")
                        .HasColumnType("int");

                    b.Property<DateTime>("DTCreate")
                        .HasColumnType("datetime2");

                    b.Property<int>("GenderId")
                        .HasColumnType("int");

                    b.Property<int?>("LocationId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.HasIndex("LocationId");

                    b.ToTable("Movies");
                });

            modelBuilder.Entity("MoviesApi.Models.Gender", b =>
                {
                    b.HasOne("MoviesApi.Models.Movie", null)
                        .WithMany("Genders")
                        .HasForeignKey("MovieId");
                });

            modelBuilder.Entity("MoviesApi.Models.Movie", b =>
                {
                    b.HasOne("MoviesApi.Models.Location", null)
                        .WithMany("Movies")
                        .HasForeignKey("LocationId");
                });

            modelBuilder.Entity("MoviesApi.Models.Location", b =>
                {
                    b.Navigation("Movies");
                });

            modelBuilder.Entity("MoviesApi.Models.Movie", b =>
                {
                    b.Navigation("Genders");
                });
#pragma warning restore 612, 618
        }
    }
}
